// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vozila.Data;

#nullable disable

namespace Vozila.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vozila.Models.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("Vozila.Models.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Vozila.Models.Proizvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Proizvodjaci");
                });

            modelBuilder.Entity("Vozila.Models.Recenzija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecezentId")
                        .HasColumnType("int");

                    b.Property<int>("VoziloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecezentId");

                    b.HasIndex("VoziloId");

                    b.ToTable("Recenzije");
                });

            modelBuilder.Entity("Vozila.Models.Recezent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recezenti");
                });

            modelBuilder.Entity("Vozila.Models.Vozilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("Godiste")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("Vozila.Models.VoziloKategorija", b =>
                {
                    b.Property<int>("VoziloId")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.HasKey("VoziloId", "KategorijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("VoziloKategorije");
                });

            modelBuilder.Entity("Vozila.Models.Proizvodjac", b =>
                {
                    b.HasOne("Vozila.Models.Drzava", "Drzava")
                        .WithMany("Proizvodjaci")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("Vozila.Models.Recenzija", b =>
                {
                    b.HasOne("Vozila.Models.Recezent", "Recezent")
                        .WithMany("Recenzije")
                        .HasForeignKey("RecezentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vozila.Models.Vozilo", "Vozilo")
                        .WithMany("Recenzije")
                        .HasForeignKey("VoziloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recezent");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Vozila.Models.Vozilo", b =>
                {
                    b.HasOne("Vozila.Models.Proizvodjac", "Proizvodjac")
                        .WithMany("Vozila")
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("Vozila.Models.VoziloKategorija", b =>
                {
                    b.HasOne("Vozila.Models.Kategorija", "Kategorija")
                        .WithMany("VoziloKategorije")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vozila.Models.Vozilo", "Vozilo")
                        .WithMany("VoziloKategorije")
                        .HasForeignKey("VoziloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Vozila.Models.Drzava", b =>
                {
                    b.Navigation("Proizvodjaci");
                });

            modelBuilder.Entity("Vozila.Models.Kategorija", b =>
                {
                    b.Navigation("VoziloKategorije");
                });

            modelBuilder.Entity("Vozila.Models.Proizvodjac", b =>
                {
                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("Vozila.Models.Recezent", b =>
                {
                    b.Navigation("Recenzije");
                });

            modelBuilder.Entity("Vozila.Models.Vozilo", b =>
                {
                    b.Navigation("Recenzije");

                    b.Navigation("VoziloKategorije");
                });
#pragma warning restore 612, 618
        }
    }
}
